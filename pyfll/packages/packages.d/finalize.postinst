#!/bin/sh

PATH=/sbin:/usr/sbin:/bin:/usr/bin

if [ -r /etc/default/distro ]; then
    . /etc/default/distro
fi

if [ -f /tmp/fll-data ]; then
    . /tmp/fll-data
fi

say() {
    echo "I: $@..."
}

do_postinst() {
    say "..........................."
    say "..                       .."
    say "..   finalize.postinst   .."
    say "..                       .."
    say "..........................."

    say "Distro:           ${DISTRO}"
    say "Flavour settings: ${FLAVOUR}"
    say "Code name:        ${CODENAME_SAFE}"

    if [ "${DISTRO}" = "siduction" ]; then
        # if anything else is installed - install the siducton branding
        # packages in top of the current installation. Not the very best
        # solution but the best we can have right now without changing
        # pyfll to much
        say "Install live settings: $CODENAME_SAFE-$FLAVOUR-livesettings"
        apt-get install --no-install-recommends "$CODENAME_SAFE-$FLAVOUR-livesettings" \
                        "$CODENAME_SAFE-$FLAVOUR-settings" --assume-yes

#        echo "Second:"
#        apt-get install c-blues-lxqt-livesettings c-blues-lxqt-settings --assume-yes
#        echo
#        echo

        # we install some packages with not recommends because the
        # recommends are really fugly
        apt-get install --no-install-recommends --assume-yes \
            cli-installer \
            kernel-remover \
            siduction-irc \
            inxi \
            popularity-contest \
            reportbug \
            xdg-utils \
            xdg-user-dirs

        if [ "$FLAVOUR" = kde ]; then
	    apt-get install --no-install-recommends --assume-yes sddm-theme-siduction-breeze-$CODENAME_SAFE
	fi
    fi

    LIVE_SETTINGS='none'
    if [ -f /usr/bin/livesettings ]; then
        say "Configure Live Settings ... (current livesettings scripts)"
        livesettings configure
        LIVE_SETTINGS='found'
    fi

    if [ "$LIVE_SETTINGS" = 'none' ]; then
        echo 'No live settings scripts found! Please fix! (exit in finalize.postinst)'
        exit 1
    fi

    # setup tmpfs the systemd way
    if [ -f /usr/share/systemd/tmp.mount ]; then
        ln -s /usr/share/systemd/tmp.mount /lib/systemd/system
        systemctl enable tmp.mount
    else
        echo "**************************************************"
        echo "Someone changed the tmp.mount descision in debian!"
        echo "One should consider to change pyfll that way!     "
        echo "**************************************************"
     fi
}

case "${1}" in
    postinst)
        do_postinst
        ;;
    *)
        echo "Error: argument '${1}' not supported" >&2
        exit 3
	;;
esac
